nameOverride: ""

fullnameOverride: ""

replicas: 1

image:
  repository: nethermind/nethermind
  tag: latest
  pullPolicy: IfNotPresent

extraArgs:
  - --Sync.FastBlocks=true
  - --Pruning.Mode=Full
  - --Pruning.FullPruningCompletionBehavior=Continue
  - --Pruning.FullPruningMemoryBudgetMb=4096

jwt: ecb22bc24e7d4061f7ed690ccd5846d7d73f5d2b9733267e12f56790398d908a

defaultCommandTemplate: |
  - sh
  - -ac
  - >
  {{- if .Values.p2pNodePort.enabled }}
    . /env/init-nodeport;
  {{- end }}
    exec /nethermind/nethermind
    --datadir=/data
    --KeyStore.KeyStoreDirectory=/data/keystore
    --Network.LocalIp=$(POD_IP)
  {{- if .Values.p2pNodePort.enabled }}
    {{- if not (contains "--Network.ExternalIp=" (.Values.extraArgs | join ",")) }}
    --Network.ExternalIp=$EXTERNAL_IP
    {{- end }}
    {{- if not (contains "--Network.P2PPort=" (.Values.extraArgs | join ",")) }}
    --Network.P2PPort=$EXTERNAL_PORT
    {{- end }}
    {{- if not (contains "--Network.DiscoveryPort=" (.Values.extraArgs | join ",")) }}
    --Network.DiscoveryPort=$EXTERNAL_PORT
    {{- end }}
  {{- else }}
  {{- if not (contains "--Network.ExternalIp=" (.Values.extraArgs | join ",")) }}
    --Network.ExternalIp=$(POD_IP)
    {{- end }}
    {{- if not (contains "--Network.P2PPort=" (.Values.extraArgs | join ",")) }}
    --Network.P2PPort={{ include "nethermind.p2pPort" . }}
    {{- end }}
    {{- if not (contains "--Network.DiscoveryPort=" (.Values.extraArgs | join ",")) }}
    --Network.DiscoveryPort={{ include "nethermind.p2pPort" . }}
    {{- end }}
  {{- end }}
    --JsonRpc.Enabled=true
    --JsonRpc.Host=0.0.0.0
    --JsonRpc.Port={{ .Values.httpPort }}
    --Init.WebSocketsEnabled=true
    --JsonRpc.WebSocketsPort={{ .Values.wsPort }}
    --JsonRpc.JwtSecretFile=/data/jwt.hex
    --JsonRpc.EngineHost=0.0.0.0
    --JsonRpc.EnginePort={{ .Values.authPort }}
    --Metrics.Enabled=true
    --Metrics.NodeName=$(POD_NAME)
    --Metrics.ExposePort={{ .Values.metricsPort }}
  {{- range .Values.extraArgs }}
    {{ tpl . $ }}
  {{- end }}

customCommand: []

p2pNodePort:
  enabled: false
  port: 31000
  initContainer:
    image:
      repository: lachlanevenson/k8s-kubectl
      tag: v1.25.4
      pullPolicy: IfNotPresent
  portForwardContainer:
    image:
      repository: alpine/socat
      tag: latest
      pullPolicy: IfNotPresent

ingress:
  enabled: false
  annotations: {}
  hosts:
    - host: chart-example.local
      paths: []
  tls: []

affinity: {}

imagePullSecrets: []

annotations: {}

livenessProbe:
  tcpSocket:
    port: http-rpc
  initialDelaySeconds: 60
  periodSeconds: 120

readinessProbe:
  tcpSocket:
    port: http-rpc
  initialDelaySeconds: 10
  periodSeconds: 10

p2pPort: 30303

httpPort: 8545

wsPort: 8546

authPort: 8551

metricsPort: 9546

nodeSelector: {}

persistence:
  enabled: true
  existingClaim: storage-nethermind-0
  accessModes:
    - ReadWriteOnce
  size: 1024Gi
  storageClassName: "standard"
  annotations: {}
  selector: {}

podLabels: {}

podAnnotations: {}

podManagementPolicy: OrderedReady

priorityClassName: null

rbac:
  create: true
  clusterRules:
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"
  rules:
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"

resources:
  limits:
    cpu: "6"
    memory: "16Gi"
  requests:
    cpu: "4"
    memory: "12Gi"

securityContext:
  fsGroup: 10001
  runAsGroup: 10001
  runAsNonRoot: true
  runAsUser: 10001

containerSecurityContext: {}

serviceAccount:
  create: true
  annotations: {}
  name: ""

terminationGracePeriodSeconds: 300

tolerations: []

topologySpreadConstraints: []

podDisruptionBudget: {}

updateStrategy:
  type: RollingUpdate

initContainers: []

extraContainers: []

extraVolumes: []

extraVolumeMounts: []

extraPorts: []

extraEnv: []

secretEnv: {}

initChownData:
  enabled: true
  image:
    repository: busybox
    tag: "1.34.0"
    pullPolicy: IfNotPresent
  resources: {}

serviceMonitor:
  enabled: false
  path: /metrics
  namespace: null
  labels: {}
  annotations: {}
  interval: 1m
  scheme: http
  tlsConfig: {}
  scrapeTimeout: 30s
  relabelings: []

